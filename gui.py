# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QWidget
from pyqtgraph import PlotWidget, plot
import pyqtgraph as pg
from SigSource import SigSource
import numpy as np
import sys
import matplotlib.pyplot as plt


class Ui_MainWindow(object):
    def __init__(self):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1280, 720)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.sig_source_lb = QtWidgets.QLabel(self.centralwidget)
        self.sig_source_lb.setGeometry(QtCore.QRect(20, 10, 120, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.sig_source_lb.setFont(font)
        self.sig_source_lb.setObjectName("sig_source_lb")

        self.modulation_cb = QtWidgets.QComboBox(self.centralwidget)
        self.modulation_cb.setGeometry(QtCore.QRect(100, 40, 100, 22))
        self.modulation_cb.setObjectName("modulation_cb")
        self.modulation_lb = QtWidgets.QLabel(self.centralwidget)
        self.modulation_lb.setGeometry(QtCore.QRect(20, 45, 65, 16))
        self.modulation_lb.setObjectName("modulation_lb")

        self.periods_lb = QtWidgets.QLabel(self.centralwidget)
        self.periods_lb.setGeometry(QtCore.QRect(20, 100, 65, 16))
        self.periods_lb.setObjectName("periods_lb")
        self.periods_text = QtWidgets.QLineEdit(self.centralwidget)
        self.periods_text.setGeometry(QtCore.QRect(100, 100, 101, 22))
        self.periods_text.setObjectName("periods_text")

        self.u_lb = QtWidgets.QLabel(self.centralwidget)
        self.u_lb.setGeometry(QtCore.QRect(20, 70, 61, 22))
        self.u_lb.setObjectName("u_lb")

        self.u_text = QtWidgets.QLineEdit(self.centralwidget)
        self.u_text.setGeometry(QtCore.QRect(100, 70, 101, 22))
        self.u_text.setObjectName("u_text")

        self.freq_text = QtWidgets.QLineEdit(self.centralwidget)
        self.freq_text.setGeometry(QtCore.QRect(100, 130, 101, 22))
        self.freq_text.setObjectName("periods_text")
        self.freq_lb = QtWidgets.QLabel(self.centralwidget)
        self.freq_lb.setGeometry(QtCore.QRect(20, 130, 70, 16))
        self.freq_lb.setObjectName("periods_lb")
        self.poly_lb = QtWidgets.QLabel(self.centralwidget)
        self.poly_lb.setGeometry(QtCore.QRect(20, 180, 65, 16))
        self.poly_lb.setObjectName("N_lb")
        self.poly_text = QtWidgets.QLineEdit(self.centralwidget)
        self.poly_text.setGeometry(QtCore.QRect(100, 180, 101, 22))
        self.poly_text.setObjectName("N_text")

        self.state_text = QtWidgets.QLineEdit(self.centralwidget)
        self.state_text.setGeometry(QtCore.QRect(100, 210, 101, 22))
        self.state_text.setObjectName("state_text")
        self.state_lb = QtWidgets.QLabel(self.centralwidget)
        self.state_lb.setGeometry(QtCore.QRect(20, 210, 65, 16))
        self.state_lb.setObjectName("state_lb")


        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(20, 230, 191, 20))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.phys_chan_lb = QtWidgets.QLabel(self.centralwidget)
        self.phys_chan_lb.setGeometry(QtCore.QRect(20, 250, 151, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.phys_chan_lb.setFont(font)
        self.phys_chan_lb.setObjectName("phys_chan_lb")
        self.diffusers_lb = QtWidgets.QLabel(self.centralwidget)
        self.diffusers_lb.setGeometry(QtCore.QRect(20, 285, 65, 16))
        self.diffusers_lb.setObjectName("diffusers_lb")
        self.diffusers_text = QtWidgets.QLineEdit(self.centralwidget)
        self.diffusers_text.setGeometry(QtCore.QRect(100, 280, 101, 22))
        self.diffusers_text.setObjectName("diffusers_text")
        self.direct_ray_chb = QtWidgets.QCheckBox(self.centralwidget)
        self.direct_ray_chb.setGeometry(QtCore.QRect(100, 310, 81, 20))
        self.direct_ray_chb.setObjectName("direct_ray_chb")
        self.noise_amp_text = QtWidgets.QLineEdit(self.centralwidget)
        self.noise_amp_text.setGeometry(QtCore.QRect(100, 335, 101, 22))
        self.noise_amp_text.setObjectName("noise_amp_text")
        self.noise_amp_lb = QtWidgets.QLabel(self.centralwidget)
        self.noise_amp_lb.setGeometry(QtCore.QRect(20, 340, 65, 16))
        self.noise_amp_lb.setObjectName("noise_amp_lb")
        self.dist_text = QtWidgets.QLineEdit(self.centralwidget)
        self.dist_text.setGeometry(QtCore.QRect(100, 365, 101, 22))
        self.dist_text.setObjectName("dist_text")
        self.dist_lb = QtWidgets.QLabel(self.centralwidget)
        self.dist_lb.setGeometry(QtCore.QRect(20, 370, 65, 16))
        self.dist_lb.setObjectName("dist_lb")
        self.line_2 = QtWidgets.QFrame(self.centralwidget)
        self.line_2.setGeometry(QtCore.QRect(20, 390, 191, 16))
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.line_3 = QtWidgets.QFrame(self.centralwidget)
        self.line_3.setGeometry(QtCore.QRect(210, 0, 16, 661))
        self.line_3.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")

        self.calc_btn = QtWidgets.QPushButton(self.centralwidget)
        self.calc_btn.setGeometry(QtCore.QRect(110, 410, 93, 28))
        self.calc_btn.setObjectName("calc_btn")

        self.plot_sig_btn = QtWidgets.QPushButton(self.centralwidget)
        self.plot_sig_btn.setGeometry(QtCore.QRect(20, 410, 93, 28))
        self.plot_sig_btn.setObjectName("plot_sig_btn")



        self.noise_chb = QtWidgets.QCheckBox(self.centralwidget)
        self.noise_chb.setGeometry(QtCore.QRect(20, 440, 81, 20))
        self.noise_chb.setObjectName("noise_chb")
        self.delays_chb = QtWidgets.QCheckBox(self.centralwidget)
        self.delays_chb.setGeometry(QtCore.QRect(110, 440, 81, 20))
        self.delays_chb.setObjectName("delays_chb")

        self.dev_chb = QtWidgets.QCheckBox(self.centralwidget)
        self.dev_chb.setGeometry(QtCore.QRect(20, 640, 81, 20))
        self.dev_chb.setObjectName("dev_chb")

        self.init_gui_elements()

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1280, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def init_gui_elements(self):
        self.modulation_cb.addItems(['Rect', 'Radio Sig', 'Gold', 'Kasami'])
        self.freq_text.setText('1600')
        self.u_text.setText('1')
        self.periods_text.setText('1')
        self.pen = pg.mkPen(color=(255, 0, 0), width=2)
        self.sig_plot_widget = pg.PlotWidget(self.centralwidget)
        self.sig_plot_widget.setBackground('w')
        self.sig_plot_widget.setFixedSize(180, 165)
        self.sig_plot_widget.move(20, 470)
        self.plot_sig_btn.clicked.connect(self.show_signal)

    def show_signal(self):
        self.sig = SigSource()
        self.sig.modulation = self.modulation_cb.currentText()
        self.sig.periods = int(self.periods_text.text())
        self.sig.u = int(self.u_text.text())
        self.sig.freq = int(self.freq_text.text())
        self.sig.polys = self.poly_text.text()
        if self.state_text.text() != '':
            self.sig.state = self.state_text.text()
        sig_x, sig_y = self.sig.generate_sig()
        sig2plot_x = sig_x[:int(len(sig_x)/10)]
        sig2plot_y = sig_y[:int(len(sig_y)/10)]
        self.sig_plot_widget.clear()
        self.sig_plot_widget.showGrid(x=True, y=True)
        self.sig_plot_widget.plot(sig2plot_x, sig2plot_y, pen=self.pen)
        if self.dev_chb.isChecked():
            plt.plot(sig2plot_x, sig2plot_y)
            plt.grid()
            plt.show()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Time Delay"))
        self.sig_source_lb.setText(_translate("MainWindow", "Signal source"))
        self.modulation_lb.setText(_translate("MainWindow", "Modulation:"))
        self.u_lb.setText(_translate("MainWindow", "U:"))
        self.periods_lb.setText(_translate("MainWindow", "Periods:"))
        self.freq_lb.setText(_translate("MainWindow", "Frequency:"))
        self.poly_lb.setText(_translate("MainWindow", "Polynomial:"))
        self.state_lb.setText(_translate("MainWindow", "State:"))
        self.phys_chan_lb.setText(_translate("MainWindow", "Physical channel"))
        self.diffusers_lb.setText(_translate("MainWindow", "Diffusers:"))
        self.direct_ray_chb.setText(_translate("MainWindow", "Direct ray"))
        self.noise_amp_lb.setText(_translate("MainWindow", "Noise amp:"))
        self.dist_lb.setText(_translate("MainWindow", "Distance:"))
        self.calc_btn.setText(_translate("MainWindow", "Calculate"))
        self.plot_sig_btn.setText(_translate("MainWindow", "Plot signal"))
        self.noise_chb.setText(_translate("MainWindow", "+Noise"))
        self.delays_chb.setText(_translate("MainWindow", "+Delays"))
        self.dev_chb.setText(_translate("MainWindow", "Dev"))


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    MainWindow.show()
    sys.exit(app.exec_())
